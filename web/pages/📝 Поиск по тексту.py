import streamlit as st
import base64
from PIL import Image
from io import BytesIO
from langchain.vectorstores import FAISS
from langchain_community.embeddings import HuggingFaceEmbeddings
from langchain.prompts import PromptTemplate
from langchain.chains import LLMChain
from langchain import HuggingFaceHub


def get_image(data):
    image = Image.open(BytesIO(base64.b64decode(data))).convert('RGB')
    return image


model = 'tomaarsen/mpnet-base-nli-matryoshka'

embeddings = HuggingFaceEmbeddings(model_name=model)
db = FAISS.load_local("./Inference_models/faiss", embeddings, allow_dangerous_deserialization=True)
YOUR_API_KEY = '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'
# —Å–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω –¥–ª—è –ø—Ä–æ–º—Ç–∞
prompt_template = """–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å, –ø–æ–ª—å–∑—É—è—Å—å —Å–ª–µ–¥—É—é—â–∏–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏:

–ù–µ –∏–∑–º–µ–Ω—è–π —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∫–∞–≤—ã—á–∫–∞—Ö.
–í –∫–æ–Ω—Ü–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
{answer}
img: {image}
"""
PROMPT = PromptTemplate(template=prompt_template, input_variables=['answer', 'image'])
chain = LLMChain(prompt=PROMPT, llm=HuggingFaceHub(
                                    repo_id='IlyaGusev/fred_t5_ru_turbo_alpaca',
                                    huggingfacehub_api_token=YOUR_API_KEY,
                                    model_kwargs={'temperature':0, 'max_length':128})
)

st.set_page_config(
    page_title='–ü–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É',
    page_icon="üìù"
)
st.title('–ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –º–µ—Å—Ç–∞ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é')

txt = st.text_area(
    "–í–∞—à–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
    "",
    )
if len(txt):
    relevants = db.similarity_search(txt)
    doc = relevants[0].dict()['metadata']
    t = chain.run(doc)
    st.write(t.split('\n')[-3])
    st.image(get_image(t.split('\n')[-2][5:]))
